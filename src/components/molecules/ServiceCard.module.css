/* src/components/molecules/ServiceCard.module.css */

.card {
  position: relative;
  width: 100%;
  height: 500px;
  cursor: pointer;
  transform-style: preserve-3d;
  transition: transform 0.1s ease-out;
  will-change: transform;
}

.face {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  border-radius: 24px;
  overflow: hidden;
}

.front {
  z-index: 2;
}

.back {
  transform: rotateY(180deg);
}

/* Animated gradient border */
.gradientBorder {
  position: absolute;
  inset: -2px;
  border-radius: 24px;
  padding: 2px;
  background: linear-gradient(45deg, #00ff88, #0088ff, #ff0088, #00ff88);
  background-size: 300% 300%;
  animation: gradientShift 4s ease infinite;
  z-index: -1;
}

@keyframes gradientShift {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

/* Glassmorphism effect */
.glassBackground {
  position: absolute;
  inset: 2px;
  background: rgba(15, 15, 15, 0.8);
  backdrop-filter: blur(20px);
  -webkit-backdrop-filter: blur(20px);
  border-radius: 22px;
  border: 1px solid rgba(255, 255, 255, 0.1);
  padding: 2rem;
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  overflow: hidden;
}

.glassBackground::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 1px;
  background: linear-gradient(90deg, 
    transparent, 
    rgba(255, 255, 255, 0.3), 
    transparent
  );
  animation: shimmer 3s infinite;
}

@keyframes shimmer {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

/* Icon styling */
.iconContainer {
  width: 80px;
  height: 80px;
  margin: 0 auto;
  position: relative;
}

.iconGlow {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background: radial-gradient(circle at center, 
    rgba(0, 255, 136, 0.2) 0%, 
    transparent 70%
  );
  border-radius: 50%;
  position: relative;
}

.iconGlow svg {
  width: 48px;
  height: 48px;
  filter: drop-shadow(0 0 20px rgba(0, 255, 136, 0.5));
  color: #00ff88;
}

.iconGlow::after {
  content: '';
  position: absolute;
  inset: -10px;
  border-radius: 50%;
  background: radial-gradient(circle at center, 
    rgba(0, 255, 136, 0.1) 0%, 
    transparent 70%
  );
  animation: pulse 2s ease-in-out infinite;
}

@keyframes pulse {
  0%, 100% { transform: scale(1); opacity: 1; }
  50% { transform: scale(1.1); opacity: 0.7; }
}

/* Content styling */
.title {
  font-size: 1.875rem;
  font-weight: 700;
  color: #ffffff;
  text-align: center;
  background: linear-gradient(135deg, #ffffff 0%, #a0a0a0 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.description {
  font-size: 1rem;
  color: rgba(255, 255, 255, 0.7);
  text-align: center;
  line-height: 1.6;
}

/* Metrics */
.metrics {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
  gap: 1rem;
  margin-top: auto;
}

.metric {
  text-align: center;
  padding: 0.75rem;
  background: rgba(255, 255, 255, 0.05);
  border-radius: 12px;
  border: 1px solid rgba(255, 255, 255, 0.1);
  transition: all 0.3s ease;
}

.metric:hover {
  background: rgba(255, 255, 255, 0.1);
  transform: translateY(-2px);
}

.metricValue {
  font-size: 1.5rem;
  font-weight: 700;
  color: #00ff88;
  margin-bottom: 0.25rem;
}

.metricLabel {
  font-size: 0.75rem;
  color: rgba(255, 255, 255, 0.6);
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

/* Tags */
.tags {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  justify-content: center;
}

.tag {
  padding: 0.25rem 0.75rem;
  background: rgba(0, 255, 136, 0.1);
  border: 1px solid rgba(0, 255, 136, 0.3);
  border-radius: 999px;
  font-size: 0.75rem;
  color: #00ff88;
  transition: all 0.3s ease;
}

.tag:hover {
  background: rgba(0, 255, 136, 0.2);
  transform: scale(1.05);
}

/* Click hint */
.clickHint {
  position: absolute;
  bottom: 1rem;
  left: 50%;
  transform: translateX(-50%);
  font-size: 0.75rem;
  color: rgba(255, 255, 255, 0.4);
  opacity: 0;
  animation: fadeInOut 3s infinite;
  animation-delay: 2s;
}

@keyframes fadeInOut {
  0%, 100% { opacity: 0; }
  50% { opacity: 1; }
}

/* Back face styling */
.backTitle {
  font-size: 1.5rem;
  font-weight: 700;
  color: #ffffff;
  text-align: center;
  margin-bottom: 1.5rem;
}

.techSpecs {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.specItem {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.75rem;
  background: rgba(255, 255, 255, 0.05);
  border-radius: 8px;
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.specLabel {
  font-size: 0.875rem;
  color: rgba(255, 255, 255, 0.6);
}

.specValue {
  font-size: 0.875rem;
  font-weight: 600;
  color: #00ff88;
}

.imageContainer {
  width: 100%;
  height: 150px;
  border-radius: 12px;
  overflow: hidden;
  position: relative;
}

.imageContainer img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  filter: brightness(0.8);
  transition: transform 0.3s ease;
}

.imageContainer:hover img {
  transform: scale(1.05);
}

.ctaButton {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  width: 100%;
  padding: 0.75rem 1.5rem;
  background: linear-gradient(135deg, #00ff88 0%, #0088ff 100%);
  border: none;
  border-radius: 8px;
  color: #000000;
  font-weight: 600;
  font-size: 1rem;
  cursor: pointer;
  transition: all 0.3s ease;
  margin-top: auto;
}

.ctaButton:hover {
  transform: translateY(-2px);
  box-shadow: 0 10px 30px rgba(0, 255, 136, 0.3);
}

.arrow {
  width: 20px;
  height: 20px;
  stroke: currentColor;
  stroke-width: 2;
  fill: none;
  transition: transform 0.3s ease;
}

.ctaButton:hover .arrow {
  transform: translateX(4px);
}

/* Responsive design */
@media (max-width: 768px) {
  .card {
    height: 450px;
  }
  
  .glassBackground {
    padding: 1.5rem;
  }
  
  .title {
    font-size: 1.5rem;
  }
  
  .metrics {
    grid-template-columns: repeat(2, 1fr);
  }
}

/* Performance optimizations */
@media (prefers-reduced-motion: reduce) {
  .gradientBorder,
  .iconGlow::after,
  .clickHint {
    animation: none;
  }
  
  .card,
  .metric,
  .tag,
  .ctaButton {
    transition: none;
  }
}

/* Container for proper 3D perspective */
.serviceCardContainer {
  perspective: 1000px;
  width: 100%;
  max-width: 400px;
}
